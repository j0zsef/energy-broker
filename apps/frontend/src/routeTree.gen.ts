/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SourcesIndexImport } from './routes/sources/index'
import { Route as SourcesCallbackImport } from './routes/sources/callback'
import { Route as SourcesAddImport } from './routes/sources/add'
import { Route as SourcesEnergySourceImport } from './routes/sources/$energy-source'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SourcesIndexRoute = SourcesIndexImport.update({
  id: '/sources/',
  path: '/sources/',
  getParentRoute: () => rootRoute,
} as any)

const SourcesCallbackRoute = SourcesCallbackImport.update({
  id: '/sources/callback',
  path: '/sources/callback',
  getParentRoute: () => rootRoute,
} as any)

const SourcesAddRoute = SourcesAddImport.update({
  id: '/sources/add',
  path: '/sources/add',
  getParentRoute: () => rootRoute,
} as any)

const SourcesEnergySourceRoute = SourcesEnergySourceImport.update({
  id: '/sources/$energy-source',
  path: '/sources/$energy-source',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/sources/$energy-source': {
      id: '/sources/$energy-source'
      path: '/sources/$energy-source'
      fullPath: '/sources/$energy-source'
      preLoaderRoute: typeof SourcesEnergySourceImport
      parentRoute: typeof rootRoute
    }
    '/sources/add': {
      id: '/sources/add'
      path: '/sources/add'
      fullPath: '/sources/add'
      preLoaderRoute: typeof SourcesAddImport
      parentRoute: typeof rootRoute
    }
    '/sources/callback': {
      id: '/sources/callback'
      path: '/sources/callback'
      fullPath: '/sources/callback'
      preLoaderRoute: typeof SourcesCallbackImport
      parentRoute: typeof rootRoute
    }
    '/sources/': {
      id: '/sources/'
      path: '/sources'
      fullPath: '/sources'
      preLoaderRoute: typeof SourcesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sources/$energy-source': typeof SourcesEnergySourceRoute
  '/sources/add': typeof SourcesAddRoute
  '/sources/callback': typeof SourcesCallbackRoute
  '/sources': typeof SourcesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sources/$energy-source': typeof SourcesEnergySourceRoute
  '/sources/add': typeof SourcesAddRoute
  '/sources/callback': typeof SourcesCallbackRoute
  '/sources': typeof SourcesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/sources/$energy-source': typeof SourcesEnergySourceRoute
  '/sources/add': typeof SourcesAddRoute
  '/sources/callback': typeof SourcesCallbackRoute
  '/sources/': typeof SourcesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sources/$energy-source'
    | '/sources/add'
    | '/sources/callback'
    | '/sources'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sources/$energy-source'
    | '/sources/add'
    | '/sources/callback'
    | '/sources'
  id:
    | '__root__'
    | '/'
    | '/sources/$energy-source'
    | '/sources/add'
    | '/sources/callback'
    | '/sources/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SourcesEnergySourceRoute: typeof SourcesEnergySourceRoute
  SourcesAddRoute: typeof SourcesAddRoute
  SourcesCallbackRoute: typeof SourcesCallbackRoute
  SourcesIndexRoute: typeof SourcesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SourcesEnergySourceRoute: SourcesEnergySourceRoute,
  SourcesAddRoute: SourcesAddRoute,
  SourcesCallbackRoute: SourcesCallbackRoute,
  SourcesIndexRoute: SourcesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/sources/$energy-source",
        "/sources/add",
        "/sources/callback",
        "/sources/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/sources/$energy-source": {
      "filePath": "sources/$energy-source.tsx"
    },
    "/sources/add": {
      "filePath": "sources/add.tsx"
    },
    "/sources/callback": {
      "filePath": "sources/callback.tsx"
    },
    "/sources/": {
      "filePath": "sources/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
